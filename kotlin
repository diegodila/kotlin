------------------------------------------------------
A23
operador ternario
------------------------------------------------------
A24
ope elvis
------------------------------------------------------
A25
when + default
expressao
range.. in()
------------------------------------------------------
A26
for 
step

100 downTo 1
------------------------------------------------------
A27
while
------------------------------------------------------
A28
dowhile

------------------------------------------------------
A29 
conversao de tipos
tem que ser explicito 
------------------------------------------------------
A30 
excessoes 
try 
catch 
finally 
------------------------------------------------------
A31
null safe

------------------------------------------------------
A32 
packages
crtl b 
------------------------------------------------------
A33 
debug

------------------------------------------------------
A34 
analisys
------------------------------------------------------
A35
parameter

fun endereco(rua: String, cidade: String = "", estado: String, cep: String = "") {
    println("Rua: $rua")
    println("Cidade: $cidade, $estado - $cep")
}

fun main() {
    endereco("Rua Kotlin", cep = "18887-854", estado = "São Paulo")
}

------------------------------------------------------
A36
N parameter

fun media(vararg notas: Float) {
    var soma = 0F
    for (i in notas) {
        soma += i
    }
    println("Média: ${soma/notas.size}")
}

fun <T> generico(vararg name: T) {
    println("Existem ${name.size} parâmetros!")
    println("Show ${name.get(2)} ")
}

//N parametros, ele armazena no Array Of <T> é uma uma convenção
fun <T> generico2(vararg name: T) {
    for (i in name) {
        println(i)
    }
}

fun main() {
    media(10F,8F)

    generico("diego", 30, true)
    generico2("diefo", "roberto",30,true)
}------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
